// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/mhaqiw/game-currency/domain"
	mock "github.com/stretchr/testify/mock"
)

// CurrencyService is an autogenerated mock type for the CurrencyService type
type CurrencyService struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, request
func (_m *CurrencyService) Create(ctx context.Context, request domain.CurrencyRequestPayload) (domain.Currency, error) {
	ret := _m.Called(ctx, request)

	var r0 domain.Currency
	if rf, ok := ret.Get(0).(func(context.Context, domain.CurrencyRequestPayload) domain.Currency); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Get(0).(domain.Currency)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, domain.CurrencyRequestPayload) error); ok {
		r1 = rf(ctx, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAll provides a mock function with given fields: ctx
func (_m *CurrencyService) GetAll(ctx context.Context) (domain.CurrenciesResponsePayload, error) {
	ret := _m.Called(ctx)

	var r0 domain.CurrenciesResponsePayload
	if rf, ok := ret.Get(0).(func(context.Context) domain.CurrenciesResponsePayload); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(domain.CurrenciesResponsePayload)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
